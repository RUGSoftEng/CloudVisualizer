<script>
    $(document).ready(function() {

        // initial load the query with default values
        getQueries();
        createGraph();

        //Actions on change of slider 
        $('#priceid2').on('input', function () {
            getQueries();
            
            // uncomment to automatically update 
            //plotData();
        });
    })


    // global variables
    var chart;
    var latestResult;

    function getQueries(){
        $.ajax({
            data: {
                price: $('#priceid2').val()
            },
            type: 'GET',
            url: '/users',
            contentType: 'application/json',
            success: function(result) {
                latestResult = result;
                var x ="<table id='mainTable' border='1px'><th onclick='sortTable(0)'>Name</th><th onclick='sortTable(1)'>Type</th><th onclick='sortTable(2)'>Price</th>";
                for (var i in result) {
                    x += "<tr><td data-type=name>" + result[i].name + "</td><td data-type=name>" + result[i].type + "</td><td data-type=int>" + result[i].price + "</td></tr>" ;
                }
                x += "</table>";
                $('#output').html(x);
                fillDropdown();
            }
        });
    }

    function sortTable(n) {
        var table, rows, switching, i, x, y, shouldSwitch, dir, switchcount = 0;
        table = document.getElementById("mainTable");
        switching = true;
        // Set the sorting direction to ascending:
        dir = "asc";

        /* Make a loop that will continue until
        no switching has been done: */
        while (switching) {
            // Start by saying: no switching is done:
            switching = false;
            rows = table.getElementsByTagName("TR");
            /* Loop through all table rows (except the
            first, which contains table headers): */
            for (i = 1; i < (rows.length - 1); i++) {
                // Start by saying there should be no switching:
                shouldSwitch = false;
                /* Get the two elements you want to compare,
                one from current row and one from the next: */
                x = rows[i].getElementsByTagName("TD")[n];
                y = rows[i + 1].getElementsByTagName("TD")[n];
                /* Check if the two rows should switch place,
                based on the direction, asc or desc: */
                if (dir == "asc") {
                    if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {
                        // If so, mark as a switch and break the loop:
                        shouldSwitch= true;
                        break;
                    }
                } else if (dir == "desc") {
                    if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {
                        // If so, mark as a switch and break the loop:
                        shouldSwitch= true;
                        break;
                    }
                }
            }
            if (shouldSwitch) {
                /* If a switch has been marked, make the switch
                and mark that a switch has been done: */
                rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
                switching = true;
                // Each time a switch is done, increase this count by 1:
                switchcount ++;
            } else {
                /* If no switching has been done AND the direction is "asc",
                set the direction to "desc" and run the while loop again. */
                if (switchcount == 0 && dir == "asc") {
                    dir = "desc";
                    switching = true;
                }
            }
        }

        // set direction arrow of the column
        if(dir == "asc"){
            table.getElementsByTagName("TH")[n].innerHTML = table.getElementsByTagName("TH")[n].innerHTML.split(' ')[0] + ' ' + ' &#9650' ;
        } else {
            table.getElementsByTagName("TH")[n].innerHTML = table.getElementsByTagName("TH")[n].innerHTML.split(' ')[0] + ' ' + ' &#9660';
        }
       // console.log("new value " + table.getElementsByTagName("TH")[n].innerHTML.split(' '));
    }

    function getCol(attribute){
        var column = [];
        for(var obj in latestResult){
            column.push(latestResult[obj][attribute]);
        }
        return column;
    }

    function createGraph(){
        // create graph in canvas area
        var ctx = document.getElementById("graph");
        chart = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: [],
                datasets: [{
                    label: 'Price',
                    data: [],
                    backgroundColor: [
                        'rgba(255, 99, 132, 0.2)',
                        'rgba(54, 162, 235, 0.2)',
                        'rgba(255, 206, 86, 0.2)',
                        'rgba(75, 192, 192, 0.2)',
                        'rgba(153, 102, 255, 0.2)',
                        'rgba(255, 159, 64, 0.2)'
                    ],
                    borderColor: [
                        'rgba(255,99,132,1)',
                        'rgba(54, 162, 235, 1)',
                        'rgba(255, 206, 86, 1)',
                        'rgba(75, 192, 192, 1)',
                        'rgba(153, 102, 255, 1)',
                        'rgba(255, 159, 64, 1)'
                    ], borderWidth: 1},

                   ]
            },
            options: {
                title:{
                    display:true,
                    text: 'Price comparison'
                },
                responsive: false,
                scales: {
                    yAxes: [{
                        ticks: {
                            beginAtZero:true
                        }
                    }]
                }
            }
        });
    }

    function plotData(){
        chart.data.labels = getCol(document.getElementById("xDropdown").value.toLowerCase());
        chart.data.datasets[0].data = getCol(document.getElementById("yDropdown").value.toLowerCase());
        // pass 0 as argument for instant updates
        chart.update();
    }

    function fillDropdown(){
        var table = document.getElementById("mainTable");
        var outputX = "<option selected disabled hidden>Choose x-axis</option>";
        var outputY = "<option selected disabled hidden>Choose y-axis</option>";
        for(var c=0, m=table.rows[0].cells.length; c<m; c++){  
            outputX += "<option value='" + table.rows[0].cells[c].innerHTML + "'/>" + table.rows[0].cells[c].innerHTML + "</option>" ;
            outputY += "<option value='" + table.rows[0].cells[c].innerHTML + "'/>" + table.rows[0].cells[c].innerHTML + "</option>" ;
        }
        document.getElementById("xDropdown").innerHTML = outputX;
        document.getElementById("yDropdown").innerHTML = outputY;
    }
    
</script>



